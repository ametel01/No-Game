#!/usr/bin/bash
ADMIN='0x063C5B329d1eE09ED337d819af1337733314F0189C804A13Aac782AEc4AEF6aa'
URI='105 112 102 115 58 47 47 81 109 78 82 54 106 86 109 68 86 55 115 71 81 102 67 114 55 120 116 114 80 67 117 78 115 97 100 85 89 104 83 122 75 118 106 112 65 100 49 68 121 83 112 84 84 47'
clean() {
    /usr/bin/rm -rf ./build/*
}

reset() {
    /usr/bin/rm ./deploy.txt
}

build() {
    protostar build
}

deploy() {
    touch deploy.txt

    stdout=$(protostar deploy './build/minter.json' --network alpha-goerli --inputs $ADMIN 2>&1 )
    sleep 10s
    minter=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    echo 'minter::'${minter}
    echo 'minter::'${minter} >> deploy.txt
    echo 'Deployed Minter...'

    stdout=$(protostar deploy ./build/erc721.json --network alpha-goerli --inputs  0x4e6f47616d6520 0x4f474d302e31 $minter 54 $URI 2>&1 )
    sleep 10s
    erc721=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    echo 'erc721$::'${erc721}
    echo 'erc721$::'${erc721} >> deploy.txt
    echo 'Deployed ERC721...'

    stdout=$(protostar deploy ./build/manager.json --network alpha-goerli --inputs $ADMIN 2>&1 )
    manager=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'manager::'${manager}
    echo 'manager::'${manager} >> deploy.txt
    echo 'Deployed Modules Manager...'

    stdout=$(protostar deploy ./build/main.json --network alpha-goerli --inputs $ADMIN $manager 2>&1 )
    game=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'game::'${game}
    echo 'game::'${game} >> deploy.txt
    echo 'Deployed NoGame...'

    stdout=$(protostar deploy ./build/erc20.json --network alpha-goerli --inputs 0x4e6f47616d652d4d6574616c 0x4e472d4d 18 0 0 $game $game 2>&1 )
    metal=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'metal::'${metal}
    echo 'metal::'${metal} >> deploy.txt
    echo 'Deployed ERC20 Metal...'

    stdout=$(protostar deploy ./build/erc20.json --network alpha-goerli --inputs  0x4e6f47616d652d4372797374616c 0x4e472d43 18 0 0 $game $game 2>&1 )
    crystal=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'crystal::'${crystal}
    echo 'crystal::'${crystal} >> deploy.txt
    echo 'Deployed ERC20 Crystal...'

    stdout=$(protostar deploy ./build/erc20.json --network alpha-goerli --inputs  0x4e6f47616d652d44657574657269756d 0x4e472d44 18 0 0 $game $game 2>&1 )
    deuterium=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'deuterium::'${deuterium}
    echo 'deuterium::'${deuterium} >> deploy.txt
    echo 'Deployed ERC20 Deuterium...'

    stdout=$(protostar deploy ./build/resources.json --network alpha-goerli --inputs $game 2>&1 )
    resources=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'resources::'${resources}
    echo 'resources::'${resources} >> deploy.txt
    echo 'Deployed Resources Module...'

    stdout=$(protostar deploy ./build/facilities.json --network alpha-goerli --inputs $game 2>&1 )
    facilities=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'facilities::'${facilities}
    echo 'facilities::'${facilities} >> deploy.txt
    echo 'Deployed Facilities Module...'

    stdout=$(protostar deploy ./build/shipyard.json --network alpha-goerli --inputs $game 2>&1 )
    shipyard=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'shipyard::'${shipyard}
    echo 'shipyard::'${shipyard} >> deploy.txt
    echo 'Deployed Shipyard Module...'

    stdout=$(protostar deploy ./build/research.json --network alpha-goerli --inputs $game 2>&1 )
    research=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'research::'${research}
    echo 'research::'${research} >> deploy.txt
    echo 'Deployed Research Lab Module...'
}

devnet_deploy() {
    touch deploy.txt

    stdout=$(protostar -p devnet deploy './build/minter.json' --inputs $ADMIN 2>&1 )
    sleep 10s
    minter=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    echo 'minter::'${minter}
    echo 'minter::'${minter} >> devnet_deploy.txt
    echo 'Deployed Minter...'

    stdout=$(protostar -p devnet deploy ./build/erc721.json  --inputs  0x4e6f47616d6520 0x4f474d302e31 $minter 54 $URI 2>&1 )
    sleep 10s
    erc721=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    echo 'erc721$::'${erc721}
    echo 'erc721$::'${erc721} >> devnet_deploy.txt
    echo 'Deployed ERC721...'

    stdout=$(protostar -p devnet deploy ./build/manager.json  --inputs $ADMIN 2>&1 )
    manager=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'manager::'${manager}
    echo 'manager::'${manager} >> devnet_deploy.txt
    echo 'Deployed Modules Manager...'

    stdout=$(protostar -p devnet deploy ./build/main.json  --inputs $ADMIN $manager 2>&1 )
    game=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'game::'${game}
    echo 'game::'${game} >> devnet_deploy.txt
    echo 'Deployed NoGame...'

    stdout=$(protostar -p devnet deploy ./build/erc20.json  --inputs 0x4e6f47616d652d4d6574616c 0x4e472d4d 18 0 0 $game $game 2>&1 )
    metal=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'metal::'${metal}
    echo 'metal::'${metal} >> devnet_deploy.txt
    echo 'Deployed ERC20 Metal...'

    stdout=$(protostar -p devnet deploy ./build/erc20.json  --inputs  0x4e6f47616d652d4372797374616c 0x4e472d43 18 0 0 $game $game 2>&1 )
    crystal=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'crystal::'${crystal}
    echo 'crystal::'${crystal} >> devnet_deploy.txt
    echo 'Deployed ERC20 Crystal...'

    stdout=$(protostar -p devnet deploy ./build/erc20.json --inputs  0x4e6f47616d652d44657574657269756d 0x4e472d44 18 0 0 $game $game 2>&1 )
    deuterium=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'deuterium::'${deuterium}
    echo 'deuterium::'${deuterium} >> devnet_deploy.txt
    echo 'Deployed ERC20 Deuterium...'

    stdout=$(protostar -p devnet deploy ./build/resources.json --inputs $game 2>&1 )
    resources=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'resources::'${resources}
    echo 'resources::'${resources} >> devnet_deploy.txt
    echo 'Deployed Resources Module...'

    stdout=$(protostar -p devnet deploy ./build/facilities.json --inputs $game 2>&1 )
    facilities=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'facilities::'${facilities}
    echo 'facilities::'${facilities} >> devnet_deploy.txt
    echo 'Deployed Facilities Module...'

    stdout=$(protostar -p devnet deploy ./build/shipyard.json --inputs $game 2>&1 )
    shipyard=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'shipyard::'${shipyard}
    echo 'shipyard::'${shipyard} >> devnet_deploy.txt
    echo 'Deployed Shipyard Module...'

    stdout=$(protostar -p devnet deploy ./build/research.json --inputs $game 2>&1 )
    research=$(echo ${stdout}  | grep -o -P '(?<=Contract address: ).*(?= Transaction hash:)')
    sleep 5s
    echo 'research::'${research}
    echo 'research::'${research} >> devnet_deploy.txt
    echo 'Deployed Research Lab Module...'
}


main() {
    case "$1" in
        "build") build ;;
        "clean") clean ;;
        "deploy") deploy ;;
        "reset") reset ;;
        "devnet_deploy") devnet_deploy ;;
    esac
}

main $@
